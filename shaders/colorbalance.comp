// Original shader created for the GIPS project by Martin Fiedler
// https://github.com/kajott/GIPS

#version 430

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba32f) uniform readonly image2D inputBack;
layout (binding = 1, rgba32f) uniform readonly image2D inputFront;
layout (binding = 2, rgba32f) uniform image2D resultImage;

layout(set = 0, binding = 3) uniform InputBuffer
{
    layout(offset = 0) float balR;
    layout(offset = 4) float balG;
    layout(offset = 8) float balB;
    layout(offset = 12) float presLuma;
} sb;

void main()
{   
    ivec2 imageSize = imageSize(inputBack);

    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

    vec4 pixel = imageLoad(inputBack, pixelCoords).rgba;  

	float luma = dot(pixel.rgb, vec3(.25, .5, .25));
    pixel.r *= 1.0 + sb.balR;
    pixel.g *= 1.0 + sb.balG;
    pixel.b *= 1.0 + sb.balB;
    if (sb.presLuma > 0.5) {
        pixel.rgb *= luma / dot(pixel.rgb, vec3(.25, .5, .25));
    }

	imageStore(resultImage, pixelCoords, pixel);
    
}