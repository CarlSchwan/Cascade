/*
 *  Cascade Image Editor
 *
 *  Copyright (C) 2022 Till Dechent and contributors
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#version 430

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba32f) uniform readonly image2D inputImage;
layout (binding = 1, rgba32f) uniform readonly image2D mask;
layout (binding = 2, rgba32f) uniform image2D resultImage;

layout(set = 0, binding = 3) uniform InputBuffer
{
    layout(offset = 0) float red;
    layout(offset = 4) float green;
    layout(offset = 8) float blue;
	layout(offset = 12) float alpha;
} sb;

float linThresh = 0.0404482362771082;

void main()
{   
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);   
     
    float r = sb.red / 255;
    float g = sb.green / 255;
    float b = sb.blue / 255;
	float a = sb.alpha / 255;

    if (r <= linThresh)
    {
        r /= 12.92;
    }
    else
    {
        r = pow(((r + 0.055) / 1.055), 2.4);
    }

    if (g <= linThresh)
    {
        g /= 12.92;
    }
    else
    {
        g = pow(((g + 0.055) / 1.055), 2.4);
    }

    if (b <= linThresh)
    {
        b /= 12.92;
    }
    else
    {
        b = pow(((b + 0.055) / 1.055), 2.4);
    }
	
	if (a <= linThresh)
    {
        a /= 12.92;
    }
    else
    {
        a = pow(((a + 0.055) / 1.055), 2.4);
    }
            
    vec4 pixel = vec4(r, g, b, a);

    imageStore(resultImage, pixelCoords, pixel);

}