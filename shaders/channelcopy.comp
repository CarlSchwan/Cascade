/*
 *  Cascade Image Editor
 *
 *  Copyright (C) 2022 Till Dechent and contributors
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#version 430

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba32f) uniform readonly image2D inputImageBack;
layout (binding = 1, rgba32f) uniform readonly image2D inputImageFront;
layout (binding = 2, rgba32f) uniform image2D resultImage;

layout(set = 0, binding = 3) uniform InputBuffer
{
    layout(offset = 0) float red;
    layout(offset = 4) float green;
    layout(offset = 8) float blue;
    layout(offset = 12) float alpha;
} sb;

void main()
{   
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

    vec4 back = imageLoad(inputImageBack, pixelCoords).rgba;
    vec4 front = imageLoad(inputImageFront, pixelCoords).rgba;

    float values[8];
    values[0] = back.r;
    values[1] = back.g;
    values[2] = back.b;
    values[3] = back.a;
    values[4] = front.r;
    values[5] = front.g;
    values[6] = front.b;
    values[7] = front.a;

    vec4 rgba = vec4(values[int(sb.red)], values[int(sb.green)], values[int(sb.blue)], values[int(sb.alpha)]);

    imageStore(resultImage, pixelCoords, rgba);
}
