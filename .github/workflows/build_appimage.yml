name: AppImage Build

on:
  [workflow_dispatch]

jobs:
  build-appimage:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install packages
      run: |
        sudo apt install -y libgtest-dev libtbb-dev build-essential libopenexr-dev cmake xcb libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev libxcb-xinerama0-dev libvulkan-dev vulkan-utils libx11-xcb-dev
    
    - name: Build Qt
      run: |
        git clone https://code.qt.io/qt/qtbase.git
        cd qtbase
        git checkout 5.15
        git submodule update --init --recursive
        ./configure -recheck-all -opensource -confirm-license -platform linux-g++ -release -prefix /usr/local -qt-freetype -no-pch -no-sql-sqlite -no-sql-odbc -qt-zlib -no-compile-examples -no-libjpeg -no-libpng -nomake tests -nomake examples -no-opengl -no-feature-concurrent -no-feature-network -no-feature-sql -no-openssl -no-feature-testlib -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcanvas3d -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquickcontrols -skip qtquickcontrols2 -skip qtremoteobjects -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtsvg -skip qtspeech -skip qttools -skip qttranslations -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebsockets -skip qtwebview -skip qtwinextras -skip qtxmlpatterns -skip qtwebengine -feature-vulkan -xcb -xcb-xlib
        make -j4
        make install
        cd
        
    - name: Build OCIO
      run: |
        git clone https://github.com/AcademySoftwareFoundation/OpenColorIO
        cd OpenColorIO
        git checkout tags/v2.1.0
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX="/usr/local" -DOCIO_BUILD_PYTHON=OFF -DOCIO_BUILD_APPS=OFF -DOCIO_BUILD_TESTS=OFF -DOCIO_BUILD_GPU_TESTS=OFF -DCMAKE_BUILD_TYPE=Release ..
        make -j4
        make install
        cd
        
    - name: Build OIIO
      run: |
        git clone https://github.com/OpenImageIO/oiio.git
        cd oiio
        git checkout tags/v2.3.15.0
        mkdir build 
        cd build
        cmake -DUSE_OPENGL=0 -DUSE_QT=0 -DUSE_PYTHON=0 -DOIIO_BUILD_TOOLS=0 -DOIIO_BUILD_TESTS=0 ..
        make -j4
        make install
        cd
    
    - name: Build Cascade
      run: | 
        cd Cascade/scripts
        sh install-deps.sh 
        cd ..
        qmake
        make -j4
        cd
     
    - name: Prepare AppDir
      run: |
        mkdir CascadeExtra
        cd CascadeExtra
        git config --global init.defaultBranch main
        git init
        git remote add -f origin https://github.com/ttddee/CascadeExtra
        git config core.sparseCheckout true
        echo "Cascade.AppDir" >> .git/info/sparse-checkout
        git pull origin main
        cd
        mkdir /home/runner/work/Cascade/Cascade/CascadeExtra/Cascade.AppDir/usr/bin
        cp /home/runner/work/Cascade/Cascade/release/Cascade /home/runner/work/Cascade/Cascade/CascadeExtra/Cascade.AppDir/usr/bin/Cascade
     
    - name: Build AppImage
      run: |
        wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        chmod +x linuxdeployqt-continuous-x86_64.AppImage
        ./linuxdeployqt-continuous-x86_64.AppImage /home/runner/work/Cascade/Cascade/CascadeExtra/Cascade.AppDir/usr/share/applications/Cascade.desktop -verbose=2 -no-translations -appimage -always-overwrite
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        mv Cascade-x86_64.AppImage Cascade-Image-Editor-x86_64-dev-${git_hash}.AppImage
          
    - name: Prepare upload
      run: |
        mkdir downloads
        cp Cascade-Image* downloads
          
    - uses: actions/upload-artifact@v3
      with:
        name: appimage
        path: downloads
          
        
         
            
